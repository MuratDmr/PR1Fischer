import java.util.*;

public class Gerade {

	public static void main(String[] args) {

		System.out.println(" Traveling Salesman Problem");
		System.out.println();
		// creating an object Random with the name variable
		Random variable = new Random();
		// creating a 2 dimensional array
		int[][] cities = new int[10][10];
		// loop from 0 to cities.lenght end (inner)
		for (int i = 0; i < cities.length; i++) { 
			// loop from 0 to cities.lenght end(outer)
			for (int j = 0; j < cities[i].length; j++) {
				// compare i with J
				if (i == j) { 
					// set the position [i][j] = 0
					cities[i][j] = 0;
				} else {
					// give the position [i][j] a Random Number
					cities[i][j] = variable.nextInt(10); 
					// reflect the pos: [i][j] to [j][i]
					cities[j][i] = cities[i][j];
				}
			}
		}
		// table of cities
		for (int i = 0; i < cities.length; i++) {
			for (int j = 0; j < cities[i].length; j++) {
				// output from the array cities
				System.out.print(cities[i][j] + " | ");   
			}
			System.out.println();	
		}
		 // array travel[10]
		int[] travel = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
		System.out.println();
		System.out.println("The length of the round trip is:");
		System.out.println(distance(travel, cities));
		System.out.println();
		for (int k = 0; k < 100000; k++) {
			// take random index position from travel array
			int i = (int) (Math.random() * 9.0);
			int j = (int) (Math.random() * 9.0);
			// save the distance in the variable travel
			int travel1 = distance(travel, cities); 
			
			swap(travel, i, j);
			int travel2 = distance(travel, cities);
			if (travel2 < travel1) {
				travel1 = travel2;

				for (int x = 0; x <= travel.length - 1; x++)
					System.out.print(travel[x] + "\t");
				System.out.println(travel2);
			} else
				swap(travel, j, i);
		}
	}
	// function with paramater
	public static int distance(int travel[], int cities[][]) {

		int calcdistance = 0;
		// loop from 0 to travel.length end
		for (int z = 0; z < travel.length - 1; z++) {

			//calculate the distance from cities pos:travel[z}travel[z+1]
			calcdistance += cities[travel[z]][travel[z + 1]];
		}
		return calcdistance;

	}

	public static void swap(int travel[], int i, int j) {

		int swap = travel[i]; //
		travel[i] = travel[j];
		travel[j] = swap;

	}

}
